<?xml version="1.0" encoding="utf-8"?>
<!--
/*
    Weave (Web-based Analysis and Visualization Environment)
    Copyright (C) 2008-2011 University of Massachusetts Lowell

    This file is a part of Weave.

    Weave is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License, Version 3,
    as published by the Free Software Foundation.

    Weave is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->
<ui:DraggablePanel
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns="weave.editors.managers.*"
	xmlns:ui="weave.ui.*"
	sessionPanelCoordsAsPercentages="false"
	escapeKeyClosesPanel="true"
	title="{lang('Add new data source')}">
	<mx:HBox initialize="UIUtils.pad(event, padding, 100, 100)" horizontalGap="{padding}">
		<mx:VBox height="100%">
			<ui:Paragraph translate="true">
				Choose one:
			</ui:Paragraph>
			<mx:List id="options" initialize="UIUtils.pad(event, 0, 100, 100, true)" change="handleDataSelect()"/>
		</mx:VBox>
		<mx:VRule height="100%"/>
		<mx:VBox initialize="UIUtils.pad(event, padding, 100, 100)" visible="{!!options.selectedItem}">
			<mx:Box id="container" initialize="UIUtils.pad(event, 0, 100, 100, true)"/>
			<mx:HBox width="100%">
				<mx:Spacer width="100%"/>
				<mx:Button id="addButton" label="{lang('Add this data source')}" click="addSource()"/>
				<mx:Button id="cancelButton" label="{lang('Cancel')}" click="removePanel()"/>
			</mx:HBox>
		</mx:VBox>
	</mx:HBox>
	
	<mx:Script>
		<![CDATA[
			import flash.utils.getQualifiedClassName;
			
			import mx.controls.Alert;
			
			import weave.Weave;
			import weave.api.WeaveAPI;
			import weave.api.copySessionState;
			import weave.api.data.IDataSource;
			import weave.api.disposeObject;
			import weave.api.newDisposableChild;
			import weave.api.reportError;
			import weave.api.ui.IDataSourceEditor;
			import weave.api.ui.ILinkableObjectEditor;
			import weave.core.ClassUtils;
			import weave.core.UIUtils;
			import weave.data.DataSources.CSVDataSource;
			import weave.data.DataSources.DBFDataSource;
			import weave.data.DataSources.TransposedDataSource;
			import weave.data.DataSources.WFSDataSource;
			import weave.data.DataSources.WeaveDataSource;
			import weave.data.DataSources.XLSDataSource;
			import weave.editors.CSVDataSourceEditor;
			import weave.editors.DBFDataSourceEditor;
			import weave.editors.TransposedDataSourceEditor;
			import weave.editors.WFSDataSourceEditor;
			import weave.editors.WeaveDataSourceEditor;
			import weave.editors.XLSDataSourceEditor;
			import weave.utils.EditorManager;

			private static const padding:int = 5;
			
			override protected function constructor():void
			{
				super.constructor();
				
				panelWidth.value = "700";
				panelHeight.value = "500";
			}
			
			override protected function childrenCreated():void
			{
				super.childrenCreated();
				
				options.dataProvider = WeaveAPI.getRegisteredImplementations(IDataSource);
				options.labelFunction = WeaveAPI.getRegisteredImplementationDisplayName;
			}
			
			private var _editor:IDataSourceEditor;
			
			private function handleDataSelect():void
			{
				disposeObject(_editor);
				container.removeAllChildren();
				_editor = null;
				if (!options.selectedItem)
					return;
				var Editor:Class = EditorManager.getEditorClass(options.selectedItem);
				if (!ClassUtils.classImplements(getQualifiedClassName(Editor), getQualifiedClassName(IDataSourceEditor)))
				{
					reportError(getQualifiedClassName(Editor) + " does not implement IDataSourceEditor");
					return;
				}
				_editor = newDisposableChild(this, Editor);
				container.addChild(_editor as DisplayObject);
				_editor.percentWidth = 100;
				_editor.percentHeight = 100;
			}
			
			private function addSource():void
			{
				if (_editor && _editor.createDataSource())
					removePanel();
			}
			
			override public function removePanel():void
			{
				options.selectedItem = null;
				handleDataSelect();
				super.removePanel();
			}
		]]>
	</mx:Script>
</ui:DraggablePanel>