<?xml version="1.0" encoding="utf-8"?>

<!-- This is the build script to build the WeaveDesktop air package and its 
     dependencies. To use these scripts, you must first 
     do the following
	1) Setup some environment variables 
           pointing to where you installed your Flex SDK.
	       Bash example
		# build setup for weave                                                                                    
		export FLEX_HOME=~/bin/flex/
		export ANT_OPTS='-XX:MaxPermSize=1024m -Xms256M -Xmx512M'
		export FRAMEWORK=frameworks/air-config.xml

		export AIR_CERT=~/PATH/TO/cert.p12
		export AIR_CERT_PASS=PASSWORD

		export JAVA_HOME=$(readlink -f /usr/bin/javac | sed "s:/bin/javac::")

	2) Add the Flex 3.6A SDK's bin folder to your operating 
	   system's PATH variable.
	3) Add ANT's bin folder to your operating system's PATH variable.
		e.g.) C:\ant\bin
	   Change FRAMEWORK_SWF property below to be the filename of 
	   the framework_*.swf file.
		For example, if yours is
		${FLEX_HOME}/frameworks/rsls/framework_3.6.0.21751.swf
		then the FRAMEWORK_SWF would be framework_3.6.0.21751.swf
	5) Restart Eclipse to let it register the updated PATH.
	6) Change WEAVE_DOCROOT property located in this file. 
	   It should be the same as the WEAVE_DOCROOT
		defined in your linked resources variable if you are using Eclipse.
	7) From command prompt, change into the WeaveClient directory and 
	   perform this command
		ant -f buildall.xml install
		This will build all the files in order and push the 
		necessary ones to WEAVE_DOCROOT.
		-->
<!-- Modified on 2014.04.09  to build WeaveDesktop air package -->
<project name="WeaveDesktop" basedir="./../" default="build">

	<property environment="env"/>

	<!-- property's defined as environment variables -->
	<property name="FLEX_HOME" value="${env.FLEX_HOME}"/>
	<property name="AIR_HOME" value="${env.AIR_HOME}"/>
	<property name="AIR_CERT" value="${env.AIR_CERT}"/> 
	<property name="AIR_CERT_PASS" value="${env.AIR_CERT_PASS}"/> 

	<property name="WEAVE_DOCROOT" value="/home/joss/weave/docroot"/>
	<property name="WEAVE_DESTROOT" value="${basedir}/ROOT"/>
	<property name="AIR_NAME" value="WeaveDesktop.air"/> 

	<property name="AIR_LIBS" value="${AIR_HOME}/frameworks/libs"/>
	<property name="ADT.JAR" value="${AIR_HOME}/lib/adt.jar"/> 
	<property name="FLEX_LIBS" value="${FLEX_HOME}/frameworks/libs"/>

	<property name="FRAMEWORK_SWF" value="framework_4.5.1.21489.swf"/>
	<property name="RPC_SWF" value="rpc_4.5.1.21328.swf"/>
	<property name="SPARK_SWF" value="spark_4.5.1.21489.swf"/>
	<property name="MX_SWF" value="mx_4.5.1.21489.swf"/>
	<property name="TEXTLAYOUT_SWF" value="textLayout_2.0.0.232.swf"/>
	
 

	<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar"/>

	<!-- These are the projects -->
	<property name="API" value="WeaveAPI"/>
	<property name="CORE" value="WeaveCore"/>
	<property name="DATA" value="WeaveData"/>
	<property name="UISPARK" value="WeaveUISpark"/>
	<property name="UI" value="WeaveUI"/>
	<property name="EXAMPLEPLUGIN" value="WeaveExamplePlugin"/>
	<property name="FONTS" value="WeaveFonts"/>
	<property name="DESKTOP" value="WeaveDesktop"/>
	<property name="CLIENT" value="WeaveClient"/>
	<property name="ADMIN" value="WeaveAdmin"/>
	<property name="SERVICES" value="WeaveServices"/>
	<property name="SERVLETUTILS" value="WeaveServletUtils"/>

	<target name="dist" depends="build">
		<zip destfile="weave.zip">
			<zipfileset dir="${WEAVE_DESTROOT}" prefix="ROOT"/>
			<zipfileset file="${basedir}/WeaveServices.war"/>
		</zip>
	</target>
	
	<target name="deploy_war">
		<zip destfile="weave.zip">
			<zipfileset dir="${WEAVE_DESTROOT}" prefix="ROOT"/>
			<zipfileset file="${basedir}/WeaveServices.war"/>
		</zip>
	</target>
	
	<target name="install" depends="build">
		<!-- This target will install the files to WEAVE_DOCROOT. -->
		<copy todir="${WEAVE_DOCROOT}">
			<fileset dir="${WEAVE_DESTROOT}">
			<include name="*.swf"/>
			<include name="*.html"/>
			<include name="*.js"/>
			<include name="*.css"/>
			</fileset>
		</copy>
		<copy todir="${WEAVE_DOCROOT}/../">
			<fileset dir="${basedir}">
			<include name="WeaveServices.war"/>
			</fileset>
		</copy> 
	</target>

	<!-- This target will extract the swf files from the swc archives
		and extract them to the WEAVE_DESTROOT -->
	<target name="build" depends="client, admin, uispark, ui, data, core, api, services, exampleplugin">
		<mkdir dir="${WEAVE_DESTROOT}"/>
		<extract_swc swc="${basedir}/${API}/bin/${API}.swc" rsl="${API}.swf"/>
		<extract_swc swc="${basedir}/${CORE}/bin/${CORE}.swc" rsl="${CORE}.swf"/>
		<extract_swc swc="${basedir}/${DATA}/bin/${DATA}.swc" rsl="${DATA}.swf"/>
		<extract_swc swc="${basedir}/${UISPARK}/bin/${UISPARK}.swc" rsl="${UISPARK}.swf"/>
		<extract_swc swc="${basedir}/${UI}/bin/${UI}.swc" rsl="${UI}.swf"/>
		<copy file="${basedir}/${CLIENT}/swf/${FONTS}.swf" 
		      tofile="${WEAVE_DESTROOT}/${FONTS}.swf"/>
		<copy file="${basedir}/${DESKTOP}/bin/WeaveDesktop.swf" 
		      tofile="${WEAVE_DESTROOT}/WeaveDesktop.swf"/>
		<copy file="${basedir}/${DESKTOP}/src/defaults.xml" 
		      tofile="${WEAVE_DESTROOT}/defaults.xml"/>
		<copy file="${basedir}/${DESKTOP}/src/weaveStyle.css" 
		      tofile="${WEAVE_DESTROOT}/weaveStyle.css"/>
		<copy file="${basedir}/${ADMIN}/bin/AdminConsole.swf" 
		      tofile="${WEAVE_DESTROOT}/AdminConsole.swf"/>
		<copy file="${basedir}/${UI}/src/weave/visualization/tools/CytoscapeWebPopout.html" 
		      tofile="${WEAVE_DESTROOT}/CytoscapeWebPopout.html"/>
		<copy file="${basedir}/${SERVICES}/bin/${SERVICES}.war" 
		      tofile="${basedir}/${SERVICES}.war"/>
		<copy failonerror="false" file="${basedir}/${EXAMPLEPLUGIN}/bin/${EXAMPLEPLUGIN}.swc" 
		      tofile="${WEAVE_DESTROOT}/${EXAMPLEPLUGIN}.swc"/>
		<copy file="${FLEX_HOME}/frameworks/rsls/${FRAMEWORK_SWF}" 
		      tofile="${WEAVE_DESTROOT}/framework.swf"/>
		<copy file="${FLEX_HOME}/frameworks/rsls/${RPC_SWF}" 
		      tofile="${WEAVE_DESTROOT}/rpc.swf"/>
		<copy file="${FLEX_HOME}/frameworks/rsls/${SPARK_SWF}" 
		      tofile="${WEAVE_DESTROOT}/spark.swf"/>
		<copy file="${FLEX_HOME}/frameworks/rsls/${MX_SWF}" 
		      tofile="${WEAVE_DESTROOT}/mx.swf"/>
		<copy file="${FLEX_HOME}/frameworks/rsls/${TEXTLAYOUT_SWF}" 
		      tofile="${WEAVE_DESTROOT}/textLayout.swf"/>
	</target>

	<!-- These targets will build each project -->
	<target name="api">
		<buildproject targetproject="${API}" targetfileext="swc"/>
	</target>
	<target name="core" depends="api">
		<buildproject targetproject="${CORE}" targetfileext="swc"/>
	</target>
	<target name="data" depends="core">
		<buildproject targetproject="${DATA}" targetfileext="swc"/>
	</target>
	<target name="uispark" depends="data">
		<buildproject targetproject="${UISPARK}" targetfileext="swc"/>
	</target>
	<target name="ui" depends="uispark">
		<buildproject targetproject="${UI}" targetfileext="swc"/>
	</target>
	<target name="client" depends="ui">
		<buildproject targetproject="${DESKTOP}" targetfileext="swf"/>
	</target>
	<target name="admin" depends="ui">
		<buildproject targetproject="${ADMIN}" targetfileext="swf"/>
	</target>
	<target name="servletutils">
		<ant dir="${basedir}/${SERVLETUTILS}" target="build"/>
	</target>
	<target name="exampleplugin" depends="ui">
		<ant dir="${basedir}/${EXAMPLEPLUGIN}" target="build"/>
	</target>
	<target name="services" depends="servletutils">
		<ant dir="${basedir}/${SERVICES}" target="dist"/>
	</target>

	<!-- This target calls the clean targets of each project's build file -->
	<target name="clean">
		<echo message="Cleaning all projects..."/>
		<delete quiet="false" includeemptydirs="true" dir="${WEAVE_DESTROOT}">
			<fileset file="${basedir}/${SERVICES}.war"/>
			<fileset file="${basedir}/weave.zip"/>
		</delete>
		<ant dir="${basedir}/${DESKTOP}" target="clean" />
		<ant dir="${basedir}/${ADMIN}" target="clean" />
		<ant dir="${basedir}/${API}" target="clean" />
		<ant dir="${basedir}/${CORE}" target="clean" />
		<ant dir="${basedir}/${DATA}" target="clean" />
		<ant dir="${basedir}/${UISPARK}" target="clean" />
		<ant dir="${basedir}/${UI}" target="clean" />
		<ant dir="${basedir}/${SERVICES}" target="clean" />
		<ant dir="${basedir}/${EXAMPLEPLUGIN}" target="clean" />
		<ant dir="${basedir}/${SERVLETUTILS}" target="clean" />
	</target>

	<!-- This Target builds the air package -->
        <target name="package"  depends="build"> 
           <path id="FILE-LIST">
             <fileset dir="${WEAVE_DESTROOT}">
               <include name="*" />
             </fileset>
           </path>
           <pathconvert pathsep=" " property="FILE-LIST.csv"
                 refid="FILE-LIST"/>
           <java 
	     jar ="${ADT.JAR}" 
	     fork = "true"  
	     dir ="${WEAVE_DESTROOT}"   
	     failonerror="true"> 
             <arg value="-package"/> 
             <arg value="-storetype"/> 
             <arg value="pkcs12"/> 
             <arg value="-keystore"/> 
             <arg value="${AIR_CERT}"/> 
	     <arg value="-storepass"/>
	     <arg value="${AIR_CERT_PASS}"/>
             <arg value="${AIR_NAME}"/> 
             <arg value="${basedir}/${DESKTOP}/src/WeaveDesktop-app.xml"/> 
             <arg line="${FILE-LIST.csv}"/> 
             <!--  <arg value="icons/*.png"/>  -->
           </java> 
        </target>

	<target name="conditional_build" unless="${targetproject}.uptodate">
		<sequential>
			<echo message="Building ${targetproject}..."/>
			<ant dir="${basedir}/${targetproject}" target="build"/>
		</sequential>
	</target>


	<macrodef name="extract_swc">
		<attribute name="swc"/>
		<attribute name="rsl"/>
		<sequential>
			<unzip src="@{swc}" dest="${WEAVE_DESTROOT}/temp">
				<patternset>
					<include name="library.swf" />
				</patternset>
			</unzip>
			<move file="${WEAVE_DESTROOT}/temp/library.swf" tofile="${WEAVE_DESTROOT}/@{rsl}"/>
			<delete dir="${WEAVE_DESTROOT}/temp"/>
		</sequential>
	</macrodef>
	
	<macrodef name="buildproject">
		<attribute name="targetproject"/>
		<attribute name="targetfileext"/>
		<sequential>
			<echo message="Checking @{targetproject}..."/>
			<uptodate targetfile="${basedir}/@{targetproject}/bin/@{targetproject}.@{targetfileext}" property="@{targetproject}.uptodate">
				<srcfiles dir="${basedir}/@{targetproject}" includes="**/*"/>
			</uptodate>
			<antcall target="conditional_build">
				<param name="targetproject" value="@{targetproject}"/>
			</antcall>
		</sequential>
	</macrodef>




</project>
